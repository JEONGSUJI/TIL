# 운영체제 이해하기

Operating System, 줄여서 OS라고 부른다. 운영체제는 저장매체(SSD/HDD)에 저장(설치)된다. 컴퓨터를 키면 운영체제는 Memory에 올라가게 된다. (참고: 폰노이만 구조)

운영체제의 목표는 사용자가 사용하는 응용 프로그램이 효율적으로, 적절하게 동작하도록 지원하는 것이다.

운영체제는 응용 프로그램이 요청하는 시스템 리소스를 효율적으로 분배하고, 지원하는 소프트웨어이다.



## 운영체제의 역할

### ① 시스템 자원(System Resource)관리자

시스템 자원은 컴퓨터 하드웨어이다. 예를 들면 CPU(중앙처리장치), Memory(DRAM, RAM), I/O Devices(입출력장치), 저장매체(SSH, HDD)가 있다.



<u>컴퓨터 하드웨어는 스스로 할 수 있는 것이 없다</u>. CPU의 경우 각 프로그램이 얼마의 CPU를 사용할지 결정할 수 없고, Memory의 경우 각 프로그램이 어느 주소에 저장되어야하는지, 어느 정도의 메모리 공간을 확보해줘야 하는지를 결정할 수 없다. 저장매체는 어디에, 어떻게 저장할지 결정할 수 없고, 키보드와 마우스 같은 I/O Devices도 스스로 표시할 수 없다. <u>그래서 운영체제가 필요하다.</u>



대표적인 운영체제에는 Windows OS, Mac OS 그리고 UNIX가 있다.



### ② 사용자와 컴퓨터간의 커뮤니케이션 지원

![image-20200209231234618](C:\Users\정수지\AppData\Roaming\Typora\typora-user-images\image-20200209231234618.png)



### ③ 컴퓨터 하드웨어와 응용 프로그램을 제어

![image-20200209231210749](C:\Users\정수지\AppData\Roaming\Typora\typora-user-images\image-20200209231210749.png)





## 운영체제와 응용 프로그램

### 응용 프로그램이란?

프로그램이란 소프트웨어를 말한다. 흔히 소프트웨어라 함은 운영체제나, 응용 프로그램(엑셀, 파워포인트 등)을 말한다. 응용프로그램은 일반 PC에서의 프로그램은 Application이라고 하고, 스마트폰에서 응용 프로그램을 App이라고 한다.



### 운영체제와 응용 프로그램간의 관계

- **운영체제는 응용프로그램을 관리한다.**
  - 응용 프로그램을 실행시킨다.
  - 응용 프로그램간의 권한을 관리해준다.
  - 응용프로그램을 사용하는 사용자도 관리한다.

> 응용 프로그램은 누구나 만들 수 있다. 그렇기 때문에 응용 프로그램의 잘못된 실행(프로그램이 다운, 모든 파일 삭제, CPU 독차지)이 발생할 가능성이 있다. 그래서 운영체제는 응용 프로그램을 관리하여 위와 같은 잘못된 실행을 막는다.



- **시스템 자원을 관리한다.**

- **사용자와 컴퓨터간의 커뮤니케이션을 지원한다.**





## 운영체제의 역사

### 1950년대

- **첫번째 컴퓨터인 ENIAC 등장**
- 운영체제가 존재하지 않았다. 컴퓨터의 성능이 1개의 응용 프로그램을 실행시키도 바빴기 때문이다. 응용 프로그램이 시스템 자원을 제어했다.



### 1960년대

#### 초반

- 프로그램 종류도 많아지고, 사용자도 많아지기 시작했다.

- **배치 처리 시스템(batch processing system) 출현**

  - 여러 응용 프로그램을 등록시켜놓으면, 순차적으로 실행하는 시스템이다.

  - 배치 처리 시스템을 기반으로 운영체제가 출현했다.

  - 단점

    - 컴퓨터 응답 시간이 오래 걸릴 수 있다. 

      ( 예) 예상 실행 시간이 12시간인 프로그램1과 예상 실행 시간이 1분인 프로그램2가 있을 때, 순차적으로 실행하기 때문에 프로그램2는 실행하기까지 12시간 이상을 기다려야하는 단점이 있었다. )

    - 실행 시간이 오래 걸릴 수 있다. (CPU가 필요 없음에도 응용 프로그램이 CPU를 점유할 수 있기 때문이다.)



#### 후반

- **시분할 시스템**과 **멀티 태스킹**이라는 **새로운 개념이 제안**되었다. <u>(단, 운영체제로 구현되지는 않았다.)</u>

  시분할 시스템과 멀티 태스킹은 응용 프로그램이 CPU를 사용하는 시간을 잘개 쪼개서, 여러개의 응용 프로그램을 동시에 실행하는 기법을 말한다.

  - 시분할 시스템(Time Sharing System) (= 멀티 태스킹)

    - 다중 사용자를 지원하고, 컴퓨터 응답시간을 최소화 하는 시스템

  - 멀티 태스킹 (Multi Tasking)

    - 단일 CPU에서 여러 응용 프로그램의 병렬 실행을 가능케 하는 시스템이다.

  - 장점

    - 컴퓨터 응답 시간을 줄일 수 있음 (시분할 시스템, 다중 사용자 지원)
    - 전체 응용 프로그램의 실행 시간을 줄일 수 있음 (멀티 프로그래밍)
    - 사용자가 느낄 때는 여러 응용 프로그램이 동시에 실행되는 것처럼 보인다 (멀티 태스킹)

    

> +. 멀티 프로그래밍: 최대한 CPU를 많이 활용하도록 하는 시스템 (시간대비 CPU 활용도를 높이는 것)



### 1970년대

- 제대로 된 운영체제 출현 (운영체제 중요성 부각)

- **UNIX(유닉스) OS**

  - 미국 AT&T 사의 벨 연구소
    - 켄 톰슨, 데니스 리치(C언어 개발)

  - 특징
    - 현대 운영체제의 기본 기술을 모두 포함한 최초의 운영체제이다.
      - 멀티 태스킹. 시분할 시스템 (다중 사용자 지원), 멀티 프로그래밍



> **운영체제 개발에 C언어가 필요했던 이유**
>
> 1970년대 이전에는 Assembly 언어로 소프트웨어를 개발했다. 이는 컴퓨터마다 각각 다시 개발해줘야 하는 단점이 있었고, 프로그래밍 복잡도가 높았다.
>
> C언어 개발 이후 컴파일러를 사용하기 때문에 다시 작성할 필요가 없어졌고, 프로그래밍 복잡도는 Assembly언어에 비해 상대적으로 낮았기 때문이다.



### 1980년대

- **개인용 컴퓨터 시대**
  - 1980년대 이전에는 대형 컴퓨터를 여러명이 접속해서 사용했다. 하지만 1980년대 이후에는 Personal Computer(PC)의 등장으로 개인용 컴퓨터 시대가 되었다.
- CLI에서 GUI로의 변화
  - 1980년대 초반에는 터미널 환경으로만 작업했다. 1980년대 중후반이 되어서 마우스의 등장으로 GUI 환경에서 작업하기 시작했다. (Macintosh: 마우스를 사용한 OS)

> **CLI와 GUI**
>
> CLI(Command Line Interface) : 터미널 환경 / 키보드와 검은 화면에서 작업
>
> GUI(Graphical User Interfase) : GUI 환경 / 마우스를 활용



### 1990년대

- 응용 프로그램 시대 (GUI환경과 개인용 컴퓨터의 보급으로 사용자 증대)
  - 엑셀, 워드 프로세서 등
  - Windows OS 대중화
- 네트워크 기술 발전 - WWW(월드 와이드 웹) 인터넷 대중화

- 오픈 소스 운동 활성화 시작
  - UNIX 계열 OS + 응용 프로그램 자체 개발, 소스 오픈
  - LINUX 운영체제는 소스도 오픈되어있고 무료 OS



### 2000년대

- 오픈 소스 활성화
  - LINUX 운영체제
  - Apache (웹서버)
  - MySQL (데이터베이스)
  - 안드로이드, 딥러닝, 데이터사이언스, IOT 관련 등등
- 가상 머신, 대용량 병렬 처리 등 활성화